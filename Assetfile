# Assetfile

# See Getting Started readme
# - https://github.com/livingsocial/rake-pipeline/blob/master/GETTING_STARTED.md

# See Assetfile examples:
# - https://gist.github.com/dudleyf/1557811
# - https://github.com/ryanto/ryanto.github.com/blob/master/Assetfile

# See minispade_filter.rb filter comments
# https://github.com/wycats/rake-pipeline-web-filters/blob/master/lib/rake-pipeline-web-filters/minispade_filter.rb

require "json"
require "rake-pipeline-web-filters"

output "public"

class HandlebarsFilter < Rake::Pipeline::Filter
  def initialize(&block)
    block ||= proc { |input| input.sub(/\.handlebars$/, ".js") }
    super(&block)
  end

  def generate_output(inputs, output)
    inputs.each do |input|
      output.write "return Ember.Handlebars.compile(#{input.read.to_json})"
    end
  end
end

input "app/js" do
  match "**/libs/**/*.js" do
    minispade :module_id_generator => proc { |input|
	    input.path.dup.sub(/^js\//, "").sub(/libs\//, "").sub(/\.js$/, "")
    }
    filter Rake::Pipeline::OrderingConcatFilter,
      [
        "app/js/libs/jquery-1.8.3.min.js",
        "app/js/libs/handlebars-1.0.0.rc.2.js",
        "app/js/libs/ember.js",
        "app/js/libs/ember-data.js",
      ],
      "libs.js"
    concat "js/libs.js"
    #uglify
  end
  
  match "**/modules/**/*.js" do
    minispade :module_id_generator => proc { |input|
      input.path.dup.sub(/^js\//, "").sub(/modules\//, "").sub(/\.js$/, "")
    }
    concat "js/modules.js"
    #uglify
  end

  match "**/app.js" do
    copy "js/app.js"
  end
end

input "app/css" do
  match "**/*.sass" do
    sass
  end

  match "**/*.css" do
    concat "css/app.css"
    #yui_css
  end
end

input "app/templates" do
  match "**/*.handlebars" do
    filter HandlebarsFilter
    minispade :module_id_generator => proc { |input| File.basename(input.fullpath, ".js") + "_template" }
    concat "js/templates.js"
  end
end

# vim:ft=ruby
